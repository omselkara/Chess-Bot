float[] scores = new float[] {1, 3, 3, 5, 9, 99};

float[] pawnRelativeScores = new float[] 
{ 
  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,
  0.050f,  0.050f,  0.050f,  0.050f,  0.050f,  0.050f,  0.050f,  0.050f,
  0.010f,  0.010f,  0.020f,  0.030f,  0.030f,  0.020f,  0.010f,  0.010f,
  0.005f,  0.005f,  0.010f,  0.025f,  0.025f,  0.010f,  0.005f,  0.005f,
  0.000f,  0.000f,  0.000f,  0.020f,  0.020f,  0.000f,  0.000f,  0.000f,
  0.005f, -0.005f, -0.010f,  0.000f,  0.000f, -0.010f, -0.005f,  0.005f,
  0.005f,  0.010f,  0.010f, -0.020f, -0.020f,  0.010f,  0.010f,  0.005f,
  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f
};

float[] knightRelativeScores = new float[] 
{
  -0.050f, -0.040f, -0.030f, -0.030f, -0.030f, -0.030f, -0.040f, -0.050f,
  -0.040f, -0.020f,  0.000f,  0.000f,  0.000f,  0.000f, -0.020f, -0.040f,
  -0.030f,  0.000f,  0.010f,  0.015f,  0.015f,  0.010f,  0.000f, -0.030f,
  -0.030f,  0.005f,  0.015f,  0.020f,  0.020f,  0.015f,  0.005f, -0.030f,
  -0.030f,  0.000f,  0.015f,  0.020f,  0.020f,  0.015f,  0.000f, -0.030f,
  -0.030f,  0.005f,  0.010f,  0.015f,  0.015f,  0.010f,  0.005f, -0.030f,
  -0.040f, -0.020f,  0.000f,  0.005f,  0.005f,  0.000f, -0.020f, -0.040f,
  -0.050f, -0.040f, -0.030f, -0.030f, -0.030f, -0.030f, -0.040f, -0.050f
};

float[] bishopRelativeScores = new float[]
{
  -0.020f, -0.010f, -0.010f, -0.010f, -0.010f, -0.010f, -0.010f, -0.020f,
  -0.010f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f, -0.010f,
  -0.010f,  0.000f,  0.005f,  0.010f,  0.010f,  0.005f,  0.000f, -0.010f,
  -0.010f,  0.005f,  0.005f,  0.010f,  0.010f,  0.005f,  0.005f, -0.010f,
  -0.010f,  0.000f,  0.010f,  0.010f,  0.010f,  0.010f,  0.000f, -0.010f,
  -0.010f,  0.010f,  0.010f,  0.010f,  0.010f,  0.010f,  0.010f, -0.010f,
  -0.010f,  0.005f,  0.000f,  0.000f,  0.000f,  0.000f,  0.005f, -0.010f,
  -0.020f, -0.010f, -0.010f, -0.010f, -0.010f, -0.010f, -0.010f, -0.020f
};

float[] rookRelativeScores = new float[]
{
  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,
  0.005f,  0.010f,  0.010f,  0.010f,  0.010f,  0.010f,  0.010f,  0.005f,
 -0.005f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f, -0.005f,
 -0.005f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f, -0.005f,
 -0.005f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f, -0.005f,
 -0.005f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f, -0.005f,
 -0.005f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f, -0.005f,
  0.000f,  0.000f,  0.000f,  0.005f,  0.005f,  0.000f,  0.000f,  0.000f
};

float[] queenRelativeScores = new float[]
{
  -0.020f, -0.010f, -0.010f, -0.005f, -0.005f, -0.010f, -0.010f, -0.020f,
  -0.010f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f,  0.000f, -0.010f,
  -0.010f,  0.000f,  0.005f,  0.005f,  0.005f,  0.005f,  0.000f, -0.010f,
  -0.005f,  0.000f,  0.005f,  0.005f,  0.005f,  0.005f,  0.000f, -0.005f,
  -0.005f,  0.000f,  0.005f,  0.005f,  0.005f,  0.005f,  0.000f, -0.005f,
  -0.010f,  0.005f,  0.005f,  0.005f,  0.005f,  0.005f,  0.005f, -0.010f,
  -0.010f,  0.000f,  0.005f,  0.000f,  0.000f,  0.000f,  0.000f, -0.010f,
  -0.020f, -0.010f, -0.010f, -0.005f, -0.005f, -0.010f, -0.010f, -0.020f
};

float[] kingRelativeScores = new float[]
{
  -0.030f, -0.040f, -0.040f, -0.050f, -0.050f, -0.040f, -0.040f, -0.030f,
  -0.030f, -0.040f, -0.040f, -0.050f, -0.050f, -0.040f, -0.040f, -0.030f,
  -0.030f, -0.040f, -0.040f, -0.050f, -0.050f, -0.040f, -0.040f, -0.030f,
  -0.030f, -0.040f, -0.040f, -0.050f, -0.050f, -0.040f, -0.040f, -0.030f,
  -0.020f, -0.030f, -0.030f, -0.040f, -0.040f, -0.030f, -0.030f, -0.020f,
  -0.010f, -0.020f, -0.020f, -0.020f, -0.020f, -0.020f, -0.020f, -0.010f,
   0.010f,  0.010f, -0.010f, -0.020f, -0.020f, -0.010f,  0.010f,  0.010f,
   0.020f,  0.050f,  0.010f,  0.000f,  0.000f,  0.010f,  0.050f,  0.020f
};

float[] kingRelativeEndScores = new float[]
{
  -0.050f, -0.040f, -0.030f, -0.020f, -0.020f, -0.030f, -0.040f, -0.050f,
  -0.030f, -0.020f, -0.010f,  0.000f,  0.000f, -0.010f, -0.020f, -0.030f,
  -0.030f, -0.010f,  0.020f,  0.030f,  0.030f,  0.020f, -0.010f, -0.030f,
  -0.030f, -0.010f,  0.030f,  0.040f,  0.040f,  0.030f, -0.010f, -0.030f,
  -0.030f, -0.010f,  0.030f,  0.040f,  0.040f,  0.030f, -0.010f, -0.030f,
  -0.030f, -0.010f,  0.020f,  0.030f,  0.030f,  0.020f, -0.010f, -0.030f,
  -0.030f, -0.030f,  0.000f,  0.000f,  0.000f,  0.000f, -0.030f, -0.030f,
  -0.050f, -0.030f, -0.030f, -0.030f, -0.030f, -0.030f, -0.030f, -0.050f
};
